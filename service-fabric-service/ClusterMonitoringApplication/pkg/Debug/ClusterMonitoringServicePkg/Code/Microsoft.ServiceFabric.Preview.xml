<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ServiceFabric.Preview</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription">
            <summary>
            <para>Describes a compose deployment to be created by using 
            System.Fabric.FabricClient.ComposeDeploymentClient.CreateComposeDeploymentAsync(Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription) .</para>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.#ctor(System.String,System.String)">
            <summary>
            <para>Instantiates an instance of <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription" /> with the application instance name, and the path to the compose files.</para>
            </summary>
            <param name="deploymentName">
            <para>Name of compose deployment.</para>
            </param>
            <param name="composeFilePath">
            <para>Path to the compose file.</para>
            </param>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.DeploymentName">
            <summary>
            <para>Gets the name of the compose deployment.</para>
            </summary>
            <value>
            <para>The name of the compose deployment.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.ComposeFilePath">
            <summary>
            <para>Gets the path to the compose file.</para>
            </summary>
            <value>
            <para>The compose file path.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.ContainerRegistryUserName">
            <summary>
            <para>Gets the container registry user name.</para>
            </summary>
            <value>
            <para>The container registry user name.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.ContainerRegistryPassword">
            <summary>
            <para>Gets the container registry password.</para>
            </summary>
            <value>
            <para>The container registry user password.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription.IsRegistryPasswordEncrypted">
            <summary>
            <para>Gets if the registry password specified is encrypted or not.</para>
            </summary>
            <value>
            <para>True if the registry password is encrypted. False otherwise.</para>
            </value>
        </member>
        <member name="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription">
            <summary>
            <para>Describes a compose deployment to be created by using 
            <see cref="M:System.Fabric.FabricClient.ComposeDeploymentClient.UpgradeComposeDeploymentAsync(System.Fabric.Description.ComposeDeploymentUpgradeDescriptionWrapper)" />.</para>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.#ctor(System.String,System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.DeploymentName">
            <summary>
            <para>Gets the name of the compose deployment which is to be upgraded.</para>
            </summary>
            <value>
            <para>The deployment name.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.ComposeFilePaths">
            <summary>
            <para>Gets the array of compose file paths, which describe the next version of this deployment.</para>
            </summary>
            <value>
            <para>Array of compose file paths.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.ContainerRegistryUserName">
            <summary>
            <para>Gets the user name for the container registry where the images for the containers in this deployment are present.</para>
            </summary>
            <value>
            <para>The container registry user name.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.ContainerRegistryPassword">
            <summary>
            <para>Gets the password associated with the username specified in the ContainerRegistryUserName parameter.</para>
            </summary>
            <value>
            <para>The container registry password.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.IsRegistryPasswordEncrypted">
            <summary>
            <para>Gets if the password specified in the ContainerRegistryPassword parameter is encrypted.</para>
            </summary>
            <value>
            <para>True if the registry password is encrypted. False otherwise.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription.UpgradePolicyDescription">
            <summary>
            <para>Gets or sets the description of the policy to be used for upgrading this compose deployment.</para>
            </summary>
            <value>
            <para>The description of the policy to be used for upgrading this compose deployment.</para>
            </value>
        </member>
        <member name="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription">
            <summary>
            <para>Represents the query input used by System.Fabric.FabricClient.ComposeDeploymentClient.GetComposeDeploymentStatusPagedListAsync(Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription) .</para>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription.#ctor">
            <summary>
            <para>Instantiates an instance of <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription" /> class.</para>
            </summary>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription.DeploymentNameFilter">
            <summary>
            <para>Gets or sets the name of compose deployment to query for.</para>
            </summary>
            <value>
            <para>The name of compose deployment to query for.</para>
            </value>
            <remarks>
            <para> If DeploymentNameFilter is not specified, all compose deployments are returned.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription.ContinuationToken">
            <summary>
            <para>Gets or sets the token that can be used by queries to get the next page.</para>
            </summary>
            <value>
            <para>The token that can be used by queries to get the next page.</para>
            </value>
            <remarks>
            <para>ContinuationToken is received by a previous query.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription.MaxResults">
            <summary>
            Gets or sets the max number of Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItems that can be returned per page.
            </summary>
            <remarks>
            <para>
            If this value is not set, it is not used to limit the number of returned Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItems.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription">
            <summary>
            <para>Describes an application to be deleted by using 
            <see cref="M:System.Fabric.FabricClient.ComposeDeploymentClient.DeleteComposeDeploymentWrapperAsync(System.Fabric.Description.DeleteComposeDeploymentDescriptionWrapper,System.TimeSpan,System.Threading.CancellationToken)" />.</para>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription.#ctor(System.String)">
            <summary>
            <para>Instantiates an instance of <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription" />. </para>
            </summary>
            <param name="deploymentName">
            <para>The name of compose deployment.</para>
            </param>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription.DeploymentName">
            <summary>
            <para>Gets the name of the compose deployment.</para>
            </summary>
            <value>
            <para>The name of the compose deployment.</para>
            </value>
        </member>
        <member name="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus">
            <summary>
            Specifies the status of the compose deployment.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Invalid">
            <summary>
            Invalid.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Provisioning">
            <summary>
            The application type is being provisioned at background.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Creating">
            <summary>
            The application is being created at background.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Ready">
            <summary>
            The docker compose deployment creation or upgrade is complete.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Unprovisioning">
            <summary>
            The application type is being unprovisioned at background.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Deleting">
            <summary>
            The application is being deleted at background.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Failed">
            <summary>
            Creation or deletion was terminated due to persistent failures.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatus.Upgrading">
            <summary>
            The deployment is being upgraded.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList">
            <summary>
            <para>Represents the list of <see cref="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem" /> retrieved by calling 
            System.Fabric.FabricClient.QueryClient.GetComposeDeploymentStatusPagedListAsync(Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription).</para>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList.#ctor">
            <summary>
            <para>Creates a docker compose deployment list. </para>
            </summary>
        </member>
        <member name="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem">
            <summary>
            <para>Describes a compose deployment status result item which is characterized by deployment name, application name, compose deployment status
            , and status details.</para>
            </summary>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.DeploymentName">
            <summary>
            <para>Gets the name of the compose deployment.</para>
            </summary>
            <value>
            <para>The name of the compose deployment.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.ApplicationName">
            <summary>
            <para>Gets the name of the application as a URI.</para>
            </summary>
            <value>
            <para>The name of the application.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.ComposeDeploymentStatus">
            <summary>
            <para>Gets the status of the compose deployment as <see cref="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.ComposeDeploymentStatus" />.</para>
            </summary>
            <value>
            <para>The status of the compose deployment.</para>
            </value>
        </member>
        <member name="P:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusResultItem.StatusDetails">
            <summary>
            <para>Gets the status details of compose deployment including failure message. </para>
            </summary>
            <value>
            <para>The status details of compose deployment including failure message.</para>
            </value>
        </member>
        <member name="T:Microsoft.ServiceFabric.Preview.Client.Extensions">
            <summary>
            Extension methods for FabricClient.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.CreateComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription)">
            <summary>
              <para>Creates and instantiates the Service Fabric compose deployment described by the compose deployment description.</para>
            </summary>
            <param name="composeDeploymentDescription">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription"/> that describes the compose deployment to be created.</para>
            </param>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <returns>
              <para>A <see cref="T:System.Threading.Tasks.Task" /> representing the operation.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
              <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> 
              object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricException">
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.ImageBuilderValidationError" />: The create application request is not valid with respect to the provisioned manifests for the requested application type.</para>
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.InvalidNameUri" />: The application name is not a valid Naming URI.</para>
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.CorruptedImageStoreObjectFound" />: A corrupted file was encountered on the image store.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricElementAlreadyExistsException">
              <para><see cref="F:System.Fabric.FabricErrorCode.ComposeDeploymentAlreadyExists" />: The compose deployment has already been created.</para>
              <para><see cref="F:System.Fabric.FabricErrorCode.ApplicationAlreadyExists" />: The application has already been created so that compose deployment can not be created using the same name. </para>
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">
              <para>There was an error accessing a file on the Image Store.</para>
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
              <para>A required file was not found .</para>
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
              <para>A path to an Image Store file/directory was too long.</para>
            </exception>
            <exception cref="T:System.IO.IOException">
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.ImageStoreIOException" />: There was an IO error communicating with the Image Store.</para>
            </exception>
            <exception cref="T:System.TimeoutException">
              <para>The request timed out but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.OperationCanceledException">
              <para>The request was canceled before the timeout expired but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
              <para>
                The parameters specified via the <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription"/> are incorrect.
              </para>
            </exception>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.CreateComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription,System.TimeSpan)">
            <summary>
              <para>Creates and instantiates the Service Fabric compose deployment described by the compose deployment description.</para>
            </summary>
            <param name="composeDeploymentDescription">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription"/> that describes the compose deployment to be created.</para>
            </param>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="timeout">
            <para>Defines the maximum amount of time the system will allow this operation to continue before returning <see cref="T:System.TimeoutException" />.</para>
            </param>
            <returns>
              <para>A <see cref="T:System.Threading.Tasks.Task" /> representing the operation.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
              <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> 
              object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricException">
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.ImageBuilderValidationError" />: The create application request is not valid with respect to the provisioned manifests for the requested application type.</para>
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.InvalidNameUri" />: The application name is not a valid Naming URI.</para>
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.CorruptedImageStoreObjectFound" />: A corrupted file was encountered on the image store.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricElementAlreadyExistsException">
              <para><see cref="F:System.Fabric.FabricErrorCode.ComposeDeploymentAlreadyExists" />: The compose deployment has already been created.</para>
              <para><see cref="F:System.Fabric.FabricErrorCode.ApplicationAlreadyExists" />: The application has already been created so that compose deployment can not be created using the same name. </para>
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">
              <para>There was an error accessing a file on the Image Store.</para>
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
              <para>A required file was not found on the Image Store.</para>
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
              <para>A required directory was not found on the Image Store.</para>
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
              <para>A path to an Image Store file/directory was too long.</para>
            </exception>
            <exception cref="T:System.IO.IOException">
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.ImageStoreIOException" />: There was an IO error communicating with the Image Store.</para>
            </exception>
            <exception cref="T:System.TimeoutException">
              <para>The request timed out but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.OperationCanceledException">
              <para>The request was canceled before the timeout expired but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
              <para>
                The parameters specified via the <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription"/> are incorrect.
              </para>
            </exception>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.CreateComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
              <para>Creates and instantiates the Service Fabric compose deployment described by the compose deployment description.</para>
            </summary>
            <param name="composeDeploymentDescription">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription"/> that describes the compose deployment to be created.</para>
            </param>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="timeout">
            <para>Defines the maximum amount of time the system will allow this operation to continue before returning <see cref="T:System.TimeoutException" />.</para>
            </param>
            <param name="cancellationToken">
            <para>The CancellationToken that the operation is observing. It can be used to propagate notification that the operation should be canceled.</para>
            </param>
            <returns>
              <para>A <see cref="T:System.Threading.Tasks.Task" /> representing the operation.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
              <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> 
              object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricException">
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.ImageBuilderValidationError" />: The create application request is not valid with respect to the provisioned manifests for the requested application type.</para>
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.InvalidNameUri" />: The application name is not a valid Naming URI.</para>
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.CorruptedImageStoreObjectFound" />: A corrupted file was encountered on the image store.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricElementAlreadyExistsException">
              <para><see cref="F:System.Fabric.FabricErrorCode.ComposeDeploymentAlreadyExists" />: The compose deployment has already been created.</para>
              <para><see cref="F:System.Fabric.FabricErrorCode.ApplicationAlreadyExists" />: The application has already been created so that compose deployment can not be created using the same name. </para>
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">
              <para>There was an error accessing a file on the Image Store.</para>
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
              <para>A required file was not found on the Image Store.</para>
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
              <para>A required directory was not found on the Image Store.</para>
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
              <para>A path to an Image Store file/directory was too long.</para>
            </exception>
            <exception cref="T:System.IO.IOException">
              <para>
                <see cref="F:System.Fabric.FabricErrorCode.ImageStoreIOException" />: There was an IO error communicating with the Image Store.</para>
            </exception>
            <exception cref="T:System.TimeoutException">
              <para>The request timed out but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.OperationCanceledException">
              <para>The request was canceled before the timeout expired but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
              <para>
                The parameters specified via the <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentDescription"/> are incorrect.
              </para>
            </exception>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentStatusPagedListAsync(System.Fabric.FabricClient.QueryClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription)">
            <summary>
            <para>Gets the status of compose deployments created that match filters specified in query description (if any).
            If the compose deployments do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.</para>
            </summary>
            <param name="composeDeploymentQueryDescription">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription" /> that determines which compose deployments should be queried.</para>
            </param>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <returns>
            <para>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation.
            The value of TResult parameter is an <see cref="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList" /> that represents the list of compose deployments that respect the filters in the <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription" /> and fit the page.
            If the provided query description has no matching compose deployments, it will return a list of 0 entries.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
            <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
            <exception cref="T:System.TimeoutException">
            <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricException">
            <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentStatusPagedListAsync(System.Fabric.FabricClient.QueryClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription,System.TimeSpan)">
            <summary>
            <para>Gets the status of compose deployments created that match filters specified in query description (if any).
            If the compose deployments do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.</para>
            </summary>
            <param name="composeDeploymentQueryDescription">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription" /> that determines which compose deployments should be queried.</para>
            </param>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="timeout">
            <para>Defines the maximum amount of time the system will allow this operation to continue before returning <see cref="T:System.TimeoutException" />.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation.
            The value of TResult parameter is an <see cref="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList" /> that represents the list of compose deployments that respect the filters in the <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription" /> and fit the page.
            If the provided query description has no matching compose deployments, it will return a list of 0 entries.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
            <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
            <exception cref="T:System.TimeoutException">
            <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricException">
            <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentStatusPagedListAsync(System.Fabric.FabricClient.QueryClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            <para>Gets the status of compose deployments created that match filters specified in query description (if any).
            If the compose deployments do not fit in a page, one page of results is returned as well as a continuation token which can be used to get the next page.</para>
            </summary>
            <param name="composeDeploymentQueryDescription">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription" /> that determines which compose deployments should be queried.</para>
            </param>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="timeout">
            <para>Defines the maximum amount of time the system will allow this operation to continue before returning <see cref="T:System.TimeoutException" />.</para>
            </param>
            <param name="cancellationToken">
            <para>The CancellationToken that the operation is observing. It can be used to propagate notification that the operation should be canceled.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous query operation.
            The value of TResult parameter is an <see cref="T:Microsoft.ServiceFabric.Preview.Client.Query.ComposeDeploymentStatusList" /> that represents the list of compose deployments that respect the filters in the <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentStatusQueryDescription" /> and fit the page.
            If the provided query description has no matching compose deployments, it will return a list of 0 entries.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
            <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
            <exception cref="T:System.TimeoutException">
            <para>
                See <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricException">
            <para>
                See also <see href="https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/"/> for handling common FabricClient failures.</para>
            </exception>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.DeleteComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription)">
            <summary>
            <para>Deletes the compose deployment instance from the cluster.</para>
            </summary>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="description">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription"/> that determines which compose deployment should be deleted.</para>
            </param>
            <returns>
              <para>A <see cref="T:System.Threading.Tasks.Task" /> representing the operation.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
            <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricElementNotFoundException">
            <para>
                <see cref="F:System.Fabric.FabricErrorCode.ComposeDeploymentNotFound" />: The compose deployment does not exist.
            </para>
            </exception>
            <exception cref="T:System.Fabric.FabricTransientException">
            <para>
                <see cref="F:System.Fabric.FabricErrorCode.ApplicationUpgradeInProgress" />: The application is being upgraded. </para>
            </exception>
            <exception cref="T:System.TimeoutException">
            <para>The request timed out but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.OperationCanceledException">
            <para>The request was canceled before the timeout expired but may have already been accepted for processing by the system.</para>
            </exception>
            <remarks>
            <para>All compose deployment state will be lost and cannot be recovered after the compose deployment is deleted.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.DeleteComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription,System.TimeSpan)">
            <summary>
            <para>Deletes the compose deployment from the cluster.</para>
            </summary>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="description">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription"/> that determines which compose deployment should be deleted.</para>
            </param>
            <param name="timeout">
            <para>Defines the maximum amount of time the system will allow this operation to continue before returning System.TimeoutException.</para>
            </param>
            <returns>
              <para>A <see cref="T:System.Threading.Tasks.Task" /> representing the operation.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
            <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricElementNotFoundException">
            <para>
                <see cref="F:System.Fabric.FabricErrorCode.ComposeDeploymentNotFound" />: The compose deployment does not exist.
            </para>
            </exception>
            <exception cref="T:System.Fabric.FabricTransientException">
            <para>
                <see cref="F:System.Fabric.FabricErrorCode.ApplicationUpgradeInProgress" />: The application is being upgraded. </para>
            </exception>
            <exception cref="T:System.TimeoutException">
            <para>The request timed out but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.OperationCanceledException">
            <para>The request was canceled before the timeout expired but may have already been accepted for processing by the system.</para>
            </exception>
            <remarks>
            <para>All application state will be lost and cannot be recovered after the application is deleted.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.DeleteComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            <para>Deletes the compose deployment from the cluster.</para>
            </summary>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="description">
            <para>The <see cref="T:Microsoft.ServiceFabric.Preview.Client.Description.DeleteComposeDeploymentDescription"/> that determines which compose deployment should be deleted.</para>
            </param>
            <param name="timeout">
            <para>Defines the maximum amount of time the system will allow this operation to continue before returning System.TimeoutException.</para>
            </param>
            <param name="cancellationToken">
            <para>The <see cref="T:System.Threading.CancellationToken" /> that the operation is observing. It can be used to propagate notification that the operation should be canceled.</para>
            </param>
            <returns>
              <para>A <see cref="T:System.Threading.Tasks.Task" /> representing the operation.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
            <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricElementNotFoundException">
            <para>
                <see cref="F:System.Fabric.FabricErrorCode.ComposeDeploymentNotFound" />: The compose deployment does not exist.
            </para>
            </exception>
            <exception cref="T:System.Fabric.FabricTransientException">
            <para>
                <see cref="F:System.Fabric.FabricErrorCode.ApplicationUpgradeInProgress" />: The application is being upgraded. </para>
            </exception>
            <exception cref="T:System.TimeoutException">
            <para>The request timed out but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.OperationCanceledException">
            <para>The request was canceled before the timeout expired but may have already been accepted for processing by the system.</para>
            </exception>
            <remarks>
            <para>All application state will be lost and cannot be recovered after the application is deleted.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.UpgradeComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription)">
            <summary>
            <para>Starts the upgrade for the compose deployment identified by the deployment name, in the cluster.</para>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.UpgradeComposeDeploymentAsync(System.Fabric.FabricClient.ComposeDeploymentClient,Microsoft.ServiceFabric.Preview.Client.Description.ComposeDeploymentUpgradeDescription,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            <para>Starts the upgrade for the compose deployment identified by the deployment name, in the cluster.</para>
            </summary>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentUpgradeProgressAsync(System.Fabric.FabricClient.ComposeDeploymentClient,System.String)">
            <summary>
            <para>Retrieves the upgrade progress of the specified compose deployment.</para>
            </summary>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="deploymentName">
            <para>The name of the deployment.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Threading.Tasks.Task" /> whose result is the upgrade progress of the specified compose deployment.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
            <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricElementNotFoundException">
            <para>
                <see cref="F:System.Fabric.FabricErrorCode.ComposeDeploymentNotFound" />: The compose deployment does not exist.
            </para>
            </exception>
            <exception cref="T:System.TimeoutException">
            <para>The request timed out but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.OperationCanceledException">
            <para>The request was canceled before the timeout expired but may have already been accepted for processing by the system.</para>
            </exception>
        </member>
        <member name="M:Microsoft.ServiceFabric.Preview.Client.Extensions.GetComposeDeploymentUpgradeProgressAsync(System.Fabric.FabricClient.ComposeDeploymentClient,System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            <para>Retrieves the upgrade progress of the specified compose deployment.</para>
            </summary>
            <param name="client"><see cref="T:System.Fabric.FabricClient"/> object.</param>
            <param name="deploymentName">
            <para>The name of the deployment.</para>
            </param>
            <param name="timeout">
            <para>The maximum amount of time the system will allow this operation to continue before returning <see cref="T:System.TimeoutException" />.</para>
            </param>
            <param name="cancellationToken">
            <para>The <see cref="T:System.Threading.CancellationToken" /> that the operation is observing. It can be used to propagate notification that the operation should be canceled.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Threading.Tasks.Task" /> whose result is the upgrade progress of the specified compose deployment.</para>
            </returns>
            <exception cref="T:System.Fabric.FabricObjectClosedException">
            <para>The <see cref="T:System.Fabric.FabricClient" /> object is in a closed state. Dispose of the <see cref="T:System.Fabric.FabricClient" /> object you are using and instantiate a new <see cref="T:System.Fabric.FabricClient" /> object.</para>
            </exception>
            <exception cref="T:System.Fabric.FabricElementNotFoundException">
            <para>
                <see cref="F:System.Fabric.FabricErrorCode.ComposeDeploymentNotFound" />: The compose deployment does not exist.
            </para>
            </exception>
            <exception cref="T:System.TimeoutException">
            <para>The request timed out but may have already been accepted for processing by the system.</para>
            </exception>
            <exception cref="T:System.OperationCanceledException">
            <para>The request was canceled before the timeout expired but may have already been accepted for processing by the system.</para>
            </exception>
        </member>
    </members>
</doc>
